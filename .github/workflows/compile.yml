# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Compile Contracts

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile-contracts:
    runs-on: ubuntu-latest

    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the changed files back to the repository.
      contents: write

    steps:
      - name: setup env
        shell: bash
        run: |
          echo "GOPATH=${{ github.workspace }}/go" >> $GITHUB_ENV
          echo "${{ github.workspace }}/go/bin" >> $GITHUB_PATH

      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.20

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install node modules
        run: npm install

      - name: Install Geth (Go Ethereum) and tools
        # You may pin to the exact commit or the version.
        # uses: gacts/install-geth-tools@52e9b9a18008405eb9551a69c856256bdbe9d115
        uses: gacts/install-geth-tools@v1.1.0

      - name: Install solc
        run: |
          sudo add-apt-repository ppa:ethereum/ethereum
          sudo apt-get update
          sudo apt-get install solc

      - uses: dart-lang/setup-dart@v1

      - name: Install dart dependencies
        run: dart pub get

      - name: Compile
        run: scripts/compile.sh

      - name: Commit changes
        run: |
          git config --local user.email "bot@citizenwallet.xyz"
          git config --local user.name "citizenwallet-bot"

      - uses: phish108/autotag-action@v1.1.55
        id: tagger
        with:
          github-token: ${{ secrets.GITHUB_TOKEN}}
          with-v: "true"
          dry-run: "true"

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "[action] compile contracts"
          commit_user_name: citizenwallet-bot
          commit_user_email: bot@citizenwallet.xyz
          tagging_message: "v${{ steps.tagger.outputs.new-tag }}"
